{
	"nodes":[
		{"id":"3dd61937be9aa08f","type":"text","text":"# NestJS","x":-100,"y":-100,"width":250,"height":60},
		{"id":"8d817f8b57eb48df","type":"file","file":"Backend/NestJS/NestJS Controller、Provider、Module.md","x":-840,"y":-470,"width":400,"height":400},
		{"id":"3c5ae633c150e262","x":-100,"y":-740,"width":400,"height":400,"type":"file","file":"Backend/NestJS/NestJS Interceptors.md"},
		{"id":"b8e83c36a010530d","x":-840,"y":80,"width":400,"height":400,"type":"file","file":"Backend/NestJS/NestJS Middleware.md"},
		{"id":"ad499b0c779a4c0d","x":580,"y":-340,"width":400,"height":400,"type":"file","file":"Backend/NestJS/NestJS gurad.md"},
		{"id":"f9d4d94c80f01c68","x":420,"y":260,"width":400,"height":400,"type":"file","file":"Backend/NestJS/NestJS Pipes.md"},
		{"id":"3f7507093e12113c","type":"file","file":"Backend/NestJS/NestJS Exception filters.md","x":-175,"y":280,"width":400,"height":400},
		{"id":"4b057c80fc75366a","x":-1659,"y":-522,"width":250,"height":60,"type":"text","text":"## Module"},
		{"id":"a953adec9b00ec8a","x":-1659,"y":-270,"width":250,"height":60,"type":"text","text":"## Controller"},
		{"id":"1619256bc1e62d8d","x":-1659,"y":80,"width":250,"height":60,"type":"text","text":"## Provider"},
		{"id":"a3d14c10c9cc6e9c","x":-2580,"y":80,"width":750,"height":620,"type":"text","text":"### Custom Provider\n\n+ *Value providers*\n\t+ 提供常數\n\t+ 將外部函式注入到IoC container\n\t+ 將class抽換成特定模擬版本\n---\n+ *Class providers*\n\t+ 動態提供class\n```typescript\nconst configServiceProvider = {\n  provide: ConfigService,\n  useClass:\n    process.env.NODE_ENV === 'development'\n      ? DevelopmentConfigService\n      : ProductionConfigService,\n};\n\n@Module({\n  providers: [configServiceProvider],\n})\nexport class AppModule {}\n```\n---\n+ *Factory providers*\n\t+ 動態的建立provider\n```typescript\nconst connectionProvider = {\n  provide: 'CONNECTION',\n  useFactory: (optionsProvider: OptionsProvider, optionalProvider?: string) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider, { token: 'SomeOptionalProvider', optional: true }],\n  //       \\_____________/            \\__________________/\n  //        This provider              The provider with this\n  //        is mandatory.              token can resolve to `undefined`.\n};\n\n@Module({\n  providers: [\n    connectionProvider,\n    OptionsProvider,\n    // { provide: 'SomeOptionalProvider', useValue: 'anything' },\n  ],\n})\nexport class AppModule {}\n```\n以官方文件提供的程式碼來說，建立了一個CONNECTION的service，用來做資料庫連線，但一般來說，進行資料庫連線的時候會需要的是不同的參數(host, port , user...)，所以在這樣的情況下，就可以透過==useFactory==來依照取得的參數建立provider。讓Nest幫我們動態的生成需要的provider\n\n---\n+ *Alias providers*\n\t+ 透過`useExisting`去指定以存在的service，讓service指向指定的service。\n```typescript\n@Injectable()\nclass LoggerService {\n  /* implementation details */\n}\n\nconst loggerAliasProvider = {\n  provide: 'AliasedLoggerService',\n  useExisting: LoggerService,\n};\n\n@Module({\n  providers: [LoggerService, loggerAliasProvider],\n})\nexport class AppModule {}\n```\n\nReference:\n[Custom providers | NestJS - A progressive Node.js framework](https://docs.nestjs.com/fundamentals/custom-providers)\n[[NestJS 帶你飛！] DAY06 - Provider (上) - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天 (ithome.com.tw)](https://ithelp.ithome.com.tw/articles/10269186)"}
	],
	"edges":[
		{"id":"7538e1c951111574","fromNode":"3dd61937be9aa08f","fromSide":"left","toNode":"8d817f8b57eb48df","toSide":"right","color":"4"},
		{"id":"9978b998fa5501a2","fromNode":"3dd61937be9aa08f","fromSide":"bottom","toNode":"3f7507093e12113c","toSide":"top","color":"6"},
		{"id":"c0e2931128302015","fromNode":"3dd61937be9aa08f","fromSide":"top","toNode":"3c5ae633c150e262","toSide":"bottom","color":"1"},
		{"id":"9952f75a7cb68d17","fromNode":"3dd61937be9aa08f","fromSide":"left","toNode":"b8e83c36a010530d","toSide":"right","color":"5"},
		{"id":"388bc2a9f10a4f42","fromNode":"3dd61937be9aa08f","fromSide":"right","toNode":"ad499b0c779a4c0d","toSide":"left","color":"2"},
		{"id":"3bcfb239f766abdf","fromNode":"3dd61937be9aa08f","fromSide":"bottom","toNode":"f9d4d94c80f01c68","toSide":"top","color":"3"},
		{"id":"d264aeaece400858","fromNode":"8d817f8b57eb48df","fromSide":"left","toNode":"4b057c80fc75366a","toSide":"right","color":"4"},
		{"id":"d67aa4280daf9dd1","fromNode":"8d817f8b57eb48df","fromSide":"left","toNode":"a953adec9b00ec8a","toSide":"right","color":"4"},
		{"id":"7f822468ad7f59d4","fromNode":"8d817f8b57eb48df","fromSide":"left","toNode":"1619256bc1e62d8d","toSide":"right","color":"4"},
		{"id":"ff00b894311de096","fromNode":"1619256bc1e62d8d","fromSide":"left","toNode":"a3d14c10c9cc6e9c","toSide":"right","color":"4"}
	]
}